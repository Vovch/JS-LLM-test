// src/tests/9_migrateAngularJsToReact.js
const { validateTypeScript } = require('../validators/tsValidator');

const id = 'migrate-angularjs-to-react';
const description = 'Translates a simple AngularJS component to a React functional component.';

const angularJsCode = `
// Controller
function UserCardController() {
  var ctrl = this;
  ctrl.handleSelect = function() {
    ctrl.onSelect({ user: ctrl.user });
  };
}

// Component Definition
angular.module('myApp').component('userCard', {
  template: \`
    <div class="card" ng-click="$ctrl.handleSelect()">
      <img ng-src="{{$ctrl.user.avatar}}">
      <h3>{{$ctrl.user.name}}</h3>
    </div>
  \`,
  controller: UserCardController,
  bindings: {
    user: '<', // one-way binding for an object
    onSelect: '&' // output binding for a function
  }
});
`;

const prompt = `
You are an expert front-end developer. Your task is to migrate a component from AngularJS 1.x to modern React.
Convert the following AngularJS component into a single React functional component using TypeScript and hooks.

Requirements:
1.  The new component should be named 'UserCard'.
2.  It should accept props 'user' and 'onSelect'. Define a 'UserCardProps' interface for them. Assume a 'User' type with 'id', 'name', and 'avatar' fields.
3.  The 'onSelect' prop should be a function that is called with the user object when the main div is clicked.
4.  It should be a functional component, not a class component.
5.  Return only the TSX code for the React component, including necessary type definitions and imports. No other text.

Here is the original AngularJS component:
${angularJsCode}
`;

/**
 * @param {string} code - The code generated by the LLM.
 * @returns {{success: boolean, message: string}}
 */
async function validate(code) {
  const tsValidation = validateTypeScript(code, { isJsx: true });
  if (!tsValidation.success) {
    return tsValidation;
  }

  // Check for successful migration by looking for React patterns
  // and the absence of AngularJS patterns.
  if (code.includes('angular.module') || code.includes('controller:')) {
    return { success: false, message: 'Generated code still contains AngularJS artifacts.' };
  }
  if (!code.includes("import React from 'react'")) {
    return { success: false, message: 'React was not imported.' };
  }
  if (!code.includes('interface UserCardProps')) {
    return { success: false, message: 'Missing the "UserCardProps" interface for props.' };
  }
  if (!/const UserCard: React.FC<UserCardProps>/.test(code)) {
    return { success: false, message: 'Component signature is not "const UserCard: React.FC<UserCardProps>".' };
  }
  if (!code.includes('onClick={() => onSelect(user)}')) {
    return { success: false, message: 'The onClick handler does not seem to call onSelect correctly.' };
  }
  if (!code.includes('user.name') || !code.includes('user.avatar')) {
    return { success: false, message: 'Component does not seem to render the user name and avatar from props.' };
  }

  return { success: true, message: 'Component successfully migrated to React with correct patterns.' };
}

module.exports = { id, description, prompt, validate };